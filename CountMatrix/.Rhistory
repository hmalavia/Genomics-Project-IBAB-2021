patientCounts <- cm2[,tmp]
write.csv(patientCounts,file='GkountelaPatientCountMatrix.csv',sep='\t',quote=F)
View(s_df)
View(patientCounts)
write.csv(patients,file='GkountelaPateintInfo.csv',sep = "\t",quote = F)
write.csv(patients,file='GkountelaPateintInfo.csv',sep = "\t",quote = F,row.names = F)
library('stringr')
s_df=read.delim('GSE111065_series_matrix_sample.csv',sep = ' ',header = F )
s_df=as.data.frame(t(s_df))
View(s_df)
colnames(s_df) <- s_df[1,]
countMatrix=read.csv('../CountMatrix/Gkountela_processed_normalized_matrix.csv',sep='\t')
View(s_df)
View(countMatrix)
View(s_df)
s_df=s_df[2:nrow(s_df),]
patients <- s_df[s_df$`!Sample_characteristics_ch1` == 'origin: patient',]
write.csv('Gkountela_patients.csv',quote=F)
write.csv(patients,'Gkountela_patients.csv',quote=F)
write.csv(patients,'Gkountela_patients.csv',quote=F,row.names = F)
library('stringr')
colnames(patients)
grep("!Sample_characteristics_ch1",colnames(patients))
head(patients[,10])
colnames(patients)[10] <- "Origin"
head(patients[,11])
colnames(patients)[11] <- "Number_of_Cells"
head(patients[,12])
colnames(patients)[12] <- "Number_of_CTC"
head(patients[,14])
colnames(patients)[14] <- "Sample_Type"
head(patients[,15])
colnames(patients)[15] <- "Cell_Type"
head(patients[,16])
colnames(patients)[16] <- "CTC_Cluster_Size"
library('M3S')
library(M3S)
head(patients[,21])
colnames(patients)[21] <- "Donor"
head(patients[,24])
head(patients[,22])
View(patients)
patients=read.csv('Gkountela_patients.csv')
patients=read.csv('Gkountela_patients.csv',col.names = 1)
patients=read.csv('Gkountela_patients.csv',header = 1)
patients=read.csv('Gkountela_patients.csv',header = F)
View(patients)
colnames(patients)=patients[1,]
colnames(patients)
sampleinfo=subset(patients,select=c('!Sample_title','Origin','Sample_Type','Number_of_Cells','CTC_Cluster_Size','Number_of_CTC','Donor'))
View(patients)
patients <- patients[2:nrow(patients),]
head(patients[,10])
colnames(patients)[10] <- "Origin"
head(patients[,11])
colnames(patients)[11] <- "Number_of_Cells"
head(patients[,12])
colnames(patients)[12] <- "Number_of_CTC"
head(patients[,14])
colnames(patients)[14] <- "Sample_Type"
head(patients[,15])
colnames(patients)[15] <- "Cell_Type"
head(patients[,16])
colnames(patients)[16] <- "CTC_Cluster_Size"
head(patients[,21])
colnames(patients)[21] <- "Donor"
View(s_df)
patients1 <- s_df[s_df$`!Sample_characteristics_ch1` == 'origin: patient',]
View(patients1)
sampleinfo=subset(patients,select=c('!Sample_title','Origin','Sample_Type','Number_of_Cells','CTC_Cluster_Size','Number_of_CTC','Donor'))
View(sampleinfo)
head(sampleinfo)
sampleinfo$`!Sample_title`=str_remove_all(sampleinfo$`!Sample_title`,pattern = ' #2')
head(sampleinfo)
sampleinfo$`!Sample_title`=str_replace_all(sampleinfo$`!Sample_title`,"[_]+",".")
sampleinfo$`!Sample_title`=str_replace_all(sampleinfo$`!Sample_title`,"[_]+",".")
head(sampleinfo)
sampleinfo$Origin=str_remove_all(sampleinfo$Origin,'origin: ')
head(sampleinfo)
sampleinfo$`Sample_Type`=str_remove_all(sampleinfo$`Sample_Type`,'sample type: ')
head(sampleinfo)
sampleinfo$`CTC_Cluster_Size`=str_remove_all(sampleinfo$`CTC_Cluster_Size`,'ctc-cluster size: ')
head(sampleinfo)
sampleinfo$Donor=str_remove_all(sampleinfo$Donor,'donor: ')
head(sampleinfo)
sampleinfo$`Number_of_CTC` <- str_remove_all(sampleinfo$`Number_of_CTC`,'number of ctc: ')
head(sampleinfo)
head(sampleinfo)
head(sampleinfo)
sampleinfo$`Number_of_Cells` <- str_remove_all(sampleinfo$`Number_of_Cells`,'number of cells: ')
head(sampleinfo)
View(sampleinfo)
View(countMatrix)
View(s_df)
write.csv(sampleinfo,'Gkountela_coldata.csv',row.names = F,quote = F)
patientcounts=read.csv('GkountelaPatientCountMatrix.csv')
colnames(patientcounts)
sampleinfo$`!Sample_title`
colnames(patientcounts)[2:]
colnames(patientcounts)[2:ncols(patientcounts)]
colnames(patientcounts)[2:ncol(patientcounts)]
sampleinfo$`!Sample_title`
sampleinfo$`Number_of_Cells` <- as.integer(sampleinfo$`Number_of_Cells`)
sampleinfo$`CTC_Cluster_size` <- as.integer(sampleinfo$`CTC_Cluster_Size`)
head(sampleinfo)
sampleinfo$`Number_of_CTC` <- as.integer(sampleinfo$`Number_of_CTC`)
sampleinfo$`Sample_Type` <- factor(sampleinfo$`Sample_Type`)
str(sampleinfo$`Sample_Type`)
levels(sampleinfo$Sample_Type)
library('dplyr')
glimpse(sampleinfo)
cluster_single_count <- sampleinfo %>%
group_by(Sample_Type,Donor) %>%
summarise(no_cells=sum(`Number_of_Cells`))
View(cluster_single_count)
cluster_single_count <- sampleinfo %>%
group_by(Sample_Type,Donor) %>%
summarise(no_cells=count(`!Sample_title`))
cluster_single_count <- sampleinfo %>%
group_by(Sample_Type,Donor) %>%
summarise(`!Sample_title`)
cluster_single_count <- sampleinfo %>%
group_by(Donor) %>%
summarise(Samples=`!Sample_title`,CTC_type=Sample_Type)
cluster_single_count <- sampleinfo %>%
group_by(Donor,Sample_Type) %>%
summarise(Samples=`!Sample_title`,CTC_type=Sample_Type)
cluster_single_count <- sampleinfo %>%
group_by(Donor,Sample_Type) %>%
summarise(Samples=`!Sample_title`,Nos_Cells=Number_of_Cells)
cluster_single_count <- sampleinfo %>%
group_by(Donor,) %>%
summarise(Samples=`!Sample_title`,Nos_CL=count(Sample_Type))
cluster_single_count <- sampleinfo %>%
group_by(Donor) %>%
summarise(Samples=`!Sample_title`,Nos_CL=count(Sample_Type[1]))
cluster_single_count <- sampleinfo %>%
group_by(Donor) %>%
summarise(Samples=`!Sample_title`,Nos_CL=(Sample_Type[1]))
cluster_single_count <- sampleinfo %>%
group_by(Donor) %>%
summarise(Samples=`!Sample_title`,Nos_CL=(Sample_Type))
cluster_single_count <- sampleinfo %>%
group_by(Donor) %>%
summarise(Samples=`!Sample_title`,Nos_CL=count(Sample_Type,levels == 'CTC-cluster'))
cluster_single_count <- sampleinfo %>%
group_by(Donor) %>%
summarise(Samples=`!Sample_title`,Nos_CL=count(Sample_Type,levels == CTC-cluster))
cluster_single_count <- sampleinfo %>%
group_by(Donor) %>%
summarise(Samples=`!Sample_title`,Nos_CL=count(Sample_Type,levels = CTC-cluster))
cluster_single_count <- sampleinfo %>%
group_by(Donor,Sample_Type) %>%
summarise(Samples=`!Sample_title`)
cluster_single_count <- sampleinfo %>%
group_by(Donor,Sample_Type) %>%
summarise(Samples=`!Sample_title`,count=n())
cluster_single_count <- sampleinfo %>%
group_by(Donor,Sample_Type) %>%
summarise(Samples=`!Sample_title`,count=n(),Nos_cells=Number_of_Cells)
write.csv(cluster_single_count,'Gkountela_CTC_Cluster_Single_counts.csv',quote = F,row.names = F)
cluster_single_count <- sampleinfo %>%
group_by(Sample_Type,Donor) %>%
summarise(Samples=`!Sample_title`,count=n(),Nos_cells=Number_of_Cells)
write.csv(cluster_single_count,'Gkountela_CTC_Cluster_Single_counts.csv',quote = F,row.names = F)
library('SingleCellExperiment')
library('scran')
library('scater')
library('edgeR')
library('batchelor')
library('M3S')
counts=read.csv('GkountelaPatientCountMatrix.csv')
View(counts)
colnames(counts)[1] <- c('Geneid')
row.names(counts) <- counts$Geneid
counts <- counts[,2:ncol(counts)]
m3=M3S(counts,significant.cut = 0.1,verbose = interactive())
matrix <- as.matrix(counts)
m3=M3S(matrix,significant.cut = 0.1,verbose = interactive())
m3
m3=M3S(matrix,significant.cut = 0.1,verbose = interactive())
m3fit=M3Sfit(matrix,normalization = 'none',distribution = 'G')
View(m3fit)
m3fit=M3Sfit(matrix,normalization = c("none", "logplus", "log", "cpm.none",
"cpm.logplus", "cpm.log"),distribution = c("G", "MG", "LTMG", "LTG"))
m3fit_1=M3Sfit(matrix,normalization = c("none"),distribution = c("G"))
m3fit_2=M3Sfit(matrix,normalization = c("none"),distribution = c("MG"))
View(m3fit_1)
View(m3fit_1)
library('M3S')
counts=read.csv('GkountelaPatientCountMatrix.csv')
colnames(counts)[1] <- c('Geneid')
row.names(counts) <- counts$Geneid
counts <- counts[,2:ncol(counts)]
matrix <- as.matrix(counts)
m3s_1=M3S(matrix,significant.cut = 0.1,verbose = interactive())
head(matrix)
colnames(matrix)
rownames(matrix)
libPaths()
.libPaths()
trace("M3S", edit=TRUE)
trace("M3S", edit=TRUE)
M3S
KS
M3S::KS
sampleinfo <- read.csv('Gkountela_coldata.csv')
View(sampleinfo)
coldata <- sampleinfo
colnames(coldata)
coldata <- subset(coldata,select=c('X.Sample_title','Sample_Type','Donor'))
rownames(coldata) <- coldata$`X.Sample_title`
coldata <- coldata[,2:ncol(coldata)]
rownames(coldata)
colnames(counts)
head(counts)
hist(x = counts$Br37.1,y=rowsum(counts$Br37.1))
hist(x = counts$Br37.1,y=rowSums(counts$Br37.1))
counts=as.matrix(counts)
hist(x = counts$Br37.1,y=rowSums(counts$Br37.1))
library('ggplot')
library('ggplot2')
plt <- ggplot(data = counts ,aes(x=colnames(counts),y=rowsums(counts))) +geom_bar(stat = 'identity')
counts=read.csv('GkountelaPatientCountMatrix.csv')
plt <- ggplot(data = counts ,aes(x=colnames(counts),y=rowsums(counts))) +geom_bar(stat = 'identity')
plt
plt <- ggplot(data = counts ,aes(x=colnames(counts),y=rowSums(counts))) +geom_bar(stat = 'identity')
plt
total=rowSums(counts)
counts=read.csv('GkountelaPatientCountMatrix.csv')
colnames(counts)[1] <- c('Geneid')
row.names(counts) <- counts$Geneid
counts <- counts[,2:ncol(counts)]
total=rowSums(counts)
head(total)
total=colSums(counts)
head(total)
plt <- ggplot(data = counts ,aes(x=colnames(counts),y=total) +geom_bar(stat = 'identity')
)
plt <- ggplot(data = counts ,aes(x=colnames(counts),y=total) + geom_bar(stat = 'identity')
)
plt <- ggplot(data = counts ,aes(x=colnames(counts),y=total) + geom_bar(stat = 'identity')
plt
plt <- ggplot(data = counts ,aes(x=colnames(counts),y=total)) + geom_bar(stat = 'identity')
plt
barplot(colnames(counts),total)
total
barplot(counts$Br37.1,colSums(counts$Br37.1))
barplot(x=counts$Br37.1,y=colSums(counts$Br37.1))
x=counts$Br37.1
y=colSums(counts$Br37.1)
y=sum(counts$Br37.1)
barplot(x,y)
hist(x,y)
x=colnames(counts)[1]
x
y=sum(counts$Br37.1)
hist(x,y)
barplot(x,y)
barplot(total)
barplot(total[1:10])
barplot(total[2:20])
par(mfrow=c(3,3))
barplot(total[1:10])
barplot(total[2:20])
X11()
par(mfrow=c(2,3))
barplot(total[1:10])
par(mfrow=c(2,3))
barplot(total[1:10])
barplot(total[11:20])
barplot(total[21:30])
barplot(total[31:40])
barplot(total[41:50])
barplot(total[51:60])
barplot(total[61:70])
par(mfrow=c(3,3))
barplot(total[1:10])
barplot(total[11:20])
barplot(total[21:30])
barplot(total[31:40])
barplot(total[41:50])
barplot(total[51:60])
barplot(total[61:70])
barplot(total[71:80])
par(mfrow=c(3,3))
barplot(total[1:10],cex.axis = 0.75)
barplot(total[11:20],cex.axis = 0.75)
barplot(total[21:30],cex.axis = 0.75)
barplot(total[31:40],cex.axis = 0.75)
barplot(total[41:50],cex.axis = 0.75)
barplot(total[51:60],cex.axis = 0.75)
barplot(total[61:70],cex.axis = 0.75)
barplot(total[1:10],cex.axis = 0.75,cex.names = 0.5)
barplot(total[1:10],cex.axis = 0.75,cex.names = 0.75)
par(mfrow=c(3,3))
barplot(total[1:10],cex.names = 0.75)
barplot(total[11:20],cex.names = 0.75)
barplot(total[21:30],cex.names = 0.75)
barplot(total[31:40],cex.names = 0.75)
barplot(total[41:50],cex.names = 0.75)
barplot(total[51:60],cex.names = 0.75)
barplot(total[61:70],cex.names = 0.75)
par(mfrow=c(3,3))
barplot(total[1:10],cex.names = 0.5)
barplot(total[11:20],cex.names = 0.5)
barplot(total[21:30],cex.names = 0.5)
barplot(total[31:40],cex.names = 0.5)
barplot(total[41:50],cex.names = 0.5)
barplot(total[51:60],cex.names = 0.5)
barplot(total[61:70],cex.names = 0.5)
par(mfrow=c(3,3))
barplot(total[1:10],cex.names = 0.25)
barplot(total[11:20],cex.names = 0.25)
barplot(total[21:30],cex.names = 0.25)
barplot(total[31:40],cex.names = 0.25)
barplot(total[41:50],cex.names = 0.25)
barplot(total[51:60],cex.names = 0.25)
barplot(total[61:70],cex.names = 0.25)
hist(total)
hist(total)
total[1]
total[0]
total[2]
tots=as.data.frame(total)
tots
hist(tots)
hist(tots$total)
hist(tots[0],tots$total)
setwd()
setwd(.)
setwd("~/Documents/Project/dataset/CountMatrix")
library('scran')
library('scater')
library('batchelor')
counts_aceto=read.csv('Aceto_countMatrix.csv')
epi_up <- read.csv('Aceto_CL_vs_SC_EpiDE_Top10Down_edgeR.csv')
View(epi_up)
rownames(epi_up) <- epi_up$HGNC.approved.symbol
colnames(epi_up)
epi_up <- epi_up[,18:ncol(epi_up)]
head(epi_up)
counts_aceto=read.csv('Aceto_countMatrix.csv')
counts_aceto=counts_aceto[!duplicated(counts_aceto$symbol),]
row.names(counts_aceto)=counts_aceto$symbol
counts_aceto=counts_aceto[,2:30]
cell_name=colnames(counts_aceto)
cell_type=c('CL','SC','CL','CL','SC','CL','SC',
'CL','SC','CL','CL','CL','SC','SC',
'CL','SC','SC','CL','SC','CL',
'SC','SC','CL','CL','SC','SC','SC',
'CL','SC')
patient=c('Patient.1','Patient.1','Patient.10','Patient.10','Patient.10','Patient.2','Patient.2',
'Patient.3','Patient.3','Patient.4','Patient.4','Patient.4','Patient.4','Patient.4',
'Patient.5','Patient.5','Patient.5','Patient.6','Patient.6','Patient.7','Patient.7',
'Patient.7','Patient.8','Patient.8','Patient.8','Patient.8','Patient.8','Patient.9',
'Patient.9')
sample=c(1,1,10,10,10,2,2,3,3,4,4,4,4,4,5,5,5,6,6,7,7,7,8,8,8,8,8,9,9)
coldata=data.frame(CL_or_SC=cell_type,Patient=patient,sample=sample)
coldata$group=ifelse(coldata$CL_or_SC == 'CL',1,2)
coldata
sce=SingleCellExperiment(assays=list(counts=counts_aceto),
colData=coldata)
colData(sce)
df=perCellQCMetrics(sce)
reasons=quickPerCellQC(df)
sce[,reasons$discard]
filt_sce=sce[,!reasons$discard]
colData(filt_sce)
clust=quickCluster(filt_sce,min.size=10)
table(clust)
filt_sce <- computeSumFactors(filt_sce,cluster=clust)
filt_sce <- logNormCounts(filt_sce)
dec.sce=modelGeneVar(filt_sce,block=filt_sce$sample)
hvg.dec.sce <- getTopHVGs(dec.sce,var.threshold = 0)
sce.hvg=filt_sce[hvg.dec.sce,]
library(edgeR)
y=DGEList(counts(sce.hvg),samples=colData(sce.hvg))
y$samples
keep <- filterByExpr(y,)
y <- y[keep,]
y$counts
y <- calcNormFactors(y)
y$samples
CTCtype=factor(y$samples$CL_or_SC)
CTCtype <- relevel(CTCtype,ref='SC')
design <- model.matrix(~0+CTCtype,y$samples)
colnames(design) <- levels(CTCtype)
design
y <- estimateDisp(y,design)
summary(y$trended.dispersion)
fit <- glmQLFit(y,design,robust=T)
res <- glmQLFTest(fit,contrast = c(1,-1))
summary(decideTests(res))
tr <- glmTreat(fit,coef = 2,lfc = 2)
summary(tr)
topTags(tr)
res <- glmQLFTest(fit)
summary(decideTests(res))
design
topTags(res)
res <- glmQLFTest(fit,contrast = c(-1,1))
summary(decideTests(res))
design
res <- glmQLFTest(fit)
summary(decideTests(res))
topTags(res)
y$samples
CTCtype=factor(y$samples$CL_or_SC)
CTCtype <- relevel(CTCtype,ref='SC')
design <- model.matrix(~0+CTCtype,y$samples)
colnames(design) <- levels(CTCtype)
design
y <- estimateDisp(y,design)
summary(y$trended.dispersion)
fit <- glmQLFit(y,design,robust=T)
design
res <- glmQLFTest(fit,contrast = c(1,-1))
summary(decideTests(res))
topTags(res)
res <- glmQLFTest(fit,contrast = c(-1,1))
summary(decideTests(res))
topTags(res)
res <- glmQLFTest(fit,coef = ncols(design))
res <- glmQLFTest(fit,coef = ncol(design))
summary(decideTests(res))
topTags(res)
res <- glmQLFTest(fit,contrast = c(-1,1))
summary(decideTests(res))
topTags(res)
res <- glmQLFTest(fit,contrast = c(1,-1))
summary(decideTests(res))
topTags(res)
res <- glmQLFTest(fit,contrast = c(-1,1))
summary(decideTests(res))
topTags(res)
design
CTCtype=factor(y$samples$CL_or_SC)
levels(CTCtype)
patient
patient=factor(y$samples$Patient)
levels(patient)
design <- model.matrix(~patient+CTCtype)
CTCtype <- relevel(CTCtype,ref='SC')
design <- model.matrix(~patient+CTCtype)
rownames(design) <- colnames(y$samples)
rownames(design) <- colnames(y)
design
y <- estimateDisp(y,design,robust = T)
summary(y$common.dispersion)
plotBCV(y)
y$common.dispersion
fit <- glmQLFit(y,design,robust=T)
lrt <- glmLRT(fit)
topTags(lrt)
summary(decideTests(lrt))
CTCtype=factor(y$samples$CL_or_SC)
levels(CTCtype)
design <- model.matrix(~0+CTCtype)
rownames(design) <- colnames(y)
design
y <- estimateDisp(y,design,robust = T)
y$common.dispersion
fit <- glmQLFit(y,design,robust=T)
lrt <- glmLRT(fit)
topTags(lrt)
summary(decideTests(lrt))
CTCtype <- relevel(CTCtype,ref='SC')
design <- model.matrix(~0+CTCtype)
rownames(design) <- colnames(y)
design
y <- estimateDisp(y,design,robust = T)
y$common.dispersion
fit <- glmQLFit(y,design,robust=T)
lrt <- glmLRT(fit)
topTags(lrt)
summary(decideTests(lrt))
o <- order(lrt$table$PValue)
cpm(y)[o[1:10],]
design
res <- glmQLFTest(fit,contrast = c(-1,1))
summary(decideTests(res))
topTags(res)
p <- order(res$table$PValue)
cpm(y)[p[1:10],]
res <- glmQLFTest(fit)
summary(decideTests(res))
topTags(res)
p <- order(res$table$PValue)
cpm(y)[p[1:10],]
original=read.csv('Epigenes_unique.csv')
gmx=t(original)
View(gmx)
gmx[1]
gmx[1,1]
gmx[,1]
colnames(gmx)[1]
colnames(gmx)[0]
colnames(gmx)
rownames(gmx)
rownames(gmx)='epigenes'
View(gmx)
write.csv(gmx,'epigenes_uniq.gmt',col.names = F,quote = F)
write.csv(gmx,'epigenes_uniq.gmt',header = F,quote = F)
write.table(gmx,'epigenes_uniq.gmt',header = F,quote = F,sep = '\t')
write.table(gmx,'epigenes_uniq.gmt',col.names = F,quote = F,sep = '\t')
View(gmx)
View(counts)
counts[1]
head(counts[1])
head(counts[1,1])
head(counts[1,])
